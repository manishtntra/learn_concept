**Unit Test**

-->reverse() use in funcation & reverse_lazy() use in class.

-->reverse() use in string & reverse_lazy() use in object


-->There are three mainstream unit test frameworks for Python: 
	the built-in unittest, nosetests and pytest, Pytest is the most popular


*categorize unit test run

	--> directory wise pytest -v run
	--> pytest module -k serch name like function(first) -s 
	--> mark-- pytest -m smoke -v if in use mark decorate this funcation is run. mark fail, mark skip
	
			--> usefixtures - use fixtures on a test function or class
					filterwarnings - filter certain warnings of a test function
					skip - always skip a test function
					skipif - skip a test function if a certain condition is met
					xfail - produce an “expected failure” outcome if a certain condition is met
					parametrize - perform multiple calls to the same test function.

  
	--> -s to get print output


*Pytest fixtures have five different scopes:

  -->fixtures are created when first requested by a test, and are destroyed based on their scop
		class ke start me aur class ke end jo call hota use scop bolate hey.

	function, class, module, package, and session

		1)funcation- the default scope, the fixture is destroyed at the end of the test.

		2)class - the fixture is destroyed during teardown of the last test in the class.

		3)module - the fixture is destroyed during teardown of the last test in the module.

		4)package - the fixture is destroyed during teardown of the last test in the package.

		5)session - the fixture is destroyed at the end of the test session.


* Pytest Html Report
pip install pytest-html
pytest --html=reort.html -v -s



